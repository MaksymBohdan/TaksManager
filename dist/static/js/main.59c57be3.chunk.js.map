{"version":3,"sources":["components/projectlayout/SignInLinks.jsx","redux/actions/authActions.js","components/projectlayout/SignOutLinks.jsx","components/projectlayout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","components/dashboard/Dashboard.jsx","components/projects/ProjectDetails.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","redux/actions/projectActions.js","App.jsx","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/projectReducer.js","redux/reducers/rootReducer.js","config/fbConfig.js","redux/store/store.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","projectlayout_SignInLinks","projectlayout_SignOutLinks","Link","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","projects","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","project","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","projectlayout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","DevTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59c57be3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../redux/actions/authActions'\r\n\r\nconst SignInLinks = (props) => {\r\n  return (\r\n    <ul className='right'>\r\n      <li> <NavLink to='/create'>New Project</NavLink> </li>\r\n      <li> <NavLink to='/signin' onClick={props.signOut}>Log Out</NavLink></li>\r\n      <li> <NavLink to='/' className='btn btn-floating pink lighten-1'> {props.profile.initials} </NavLink> </li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n  return{\r\n    signOut:()=> dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps) (SignInLinks)\r\n","export const signIn = (credentials /*email and passord*/ ) => {\r\n  return (dispatch, getState, {\r\n    getFirebase\r\n  }) => {\r\n    const firebase = getFirebase(); //firebase init\r\n\r\n    firebase.auth().signInWithEmailAndPassword( // initializing firebase auth\r\n      credentials.email,\r\n      credentials.password,\r\n    ).then(() => {\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS'\r\n      });\r\n    }).catch((err) => {\r\n      dispatch({\r\n        type: 'LOGIN_ERROR',\r\n        err\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {\r\n    getFirebase\r\n  }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut() // method for signout\r\n      .then(() => {\r\n        dispatch({\r\n          type: 'SIGNOUT_SUCCESS'\r\n        })\r\n      });\r\n  }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n\r\n  return (dispatch, getState, {\r\n    getFirebase,\r\n    getFirestore\r\n  }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword( // creating a new user \r\n      newUser.email, \r\n      newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users') //creating a new collection\r\n        .doc(resp.user.uid) // creating a new doc with id and storing properties there\r\n        .set({ //setting properties\r\n          firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      });\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignOutLinks = () => {\r\n  return (\r\n    <ul className='right'>\r\n     <li> <NavLink to='/signup'>Sign Up</NavLink> </li>\r\n     <li> <NavLink to='/signin'>Login</NavLink> </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignInLinks from './SignInLinks';\r\nimport SignOutLinks from './SignOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const{auth, profile}=props;\r\n  \r\n  const links = auth.uid ? <SignInLinks profile={profile}/> : <SignOutLinks/>\r\n  return (\r\n    <nav className='nav-wrapper grey darken-3'>\r\n      <div className='container'>\r\n        <Link to='/' className='brand-logo left'> Mario Plan </Link>\r\n      {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n  return{\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  }\r\n}\r\n\r\nexport default connect (mapStateToProps)(Navbar)\r\n","import React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst Notification = (props) => {\r\n  const{notifications}=props;\r\n  return (\r\n    <div>\r\n      <div className=\"section\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n           {notifications && notifications.map(item=>{\r\n             return(\r\n               <li key={item.id}>\r\n                <span className=\"pink-text\">{item.user} </span>\r\n                <span className=\"black-text\">{item.content}</span>\r\n                <div className=\"grey-text note-date\">{moment(item.time.toDate()).fromNow()}</div>\r\n               </li>\r\n             )\r\n             })}\r\n          </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ projects }) => {\r\n  return (\r\n    <div className='card z-depth-0 project-summary'>\r\n      <div className='card-content grey-text text-darken-3'>\r\n        <span className='card-title '>{projects.title}</span> \r\n        <p>Posted by the {projects.authorFirstName} {projects.authorLastName}</p>\r\n        <p className='grey-text'>{moment(projects.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n \r\n  return (\r\n    <div className='project-list section'>\r\n      {projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <Link to={'/projects/' + project.id} key={project.id}>\r\n              <ProjectSummary projects={project}/>\r\n            </Link>\r\n          )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, { Component } from 'react'\r\nimport Notification from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render () {\r\n    const { projects, auth, notifications } = this.props\r\n    \r\n    if (!auth.uid) {\r\n      return <Redirect to='/signin' /> // route guards to deny access in loged out\r\n    } else {\r\n      return (\r\n        <div className='dashboard container'>\r\n          <div className='row'>\r\n            <div className='col s12 m6'>\r\n              <ProjectList projects={projects} />\r\n            </div>\r\n            <div className='col s12 m5 offset-m1'>\r\n              <Notification notifications={notifications} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth, \r\n    notifications: state.firestore.ordered.notifications,\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    // HOC for connecting to a single collection in firebase\r\n    { collection: 'projects', orderBy:['createdAt','desc'] /* the order of mapping*/}, // when component is active use projects collection to put in appropriate cell in state\r\n    {collection: 'notifications', limit: 5, orderBy:['time','desc']} // connecting to notification collection\r\n  ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = props => {\r\n  const { project, auth } = props\r\n\r\n  if (!auth.uid) return <Redirect to='/signin' /> // route guards to deny access in loged out\r\n\r\n  if (project) {\r\n    return (\r\n      <div className='container section project-details'>\r\n        <div className='card z-depth-0'>\r\n          <div className='card-content'>\r\n            <span className='card-title'>{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className='card-action grey lighten-4 grey-text'>\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='container center'>\r\n        <p>Loading project</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id // PROPS OF THE COMPONENT (SECOND PARAMETER)\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: 'projects' }])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../redux/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.signIn(this.state)\r\n  }\r\n\r\n  render () {\r\n    const{authError, auth }=this.props;\r\n\r\n    if (auth.uid) return <Redirect to='/' /> // route guards to deny access in loged out\r\n\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className='white'>\r\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\r\n          <div className='input-field'>\r\n            <label htmlFor='email'>Email</label>\r\n            <input type='email' id='email' onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className='input-field'>\r\n            <label htmlFor='password'>Password</label>\r\n            <input type='password' id='password' onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className='input-field'>\r\n            <button className='btn pink lighten-1 z-depth-0'>Login</button>\r\n            <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p>:null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError, // FOR MESSAGE ERROR DISPLAY\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: credentials => dispatch(signIn(credentials))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { signUp } from '../../redux/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n    this.props.signUp(this.state)\r\n  }\r\n\r\n  render () {\r\n    const { auth, authError } = this.props\r\n\r\n    if (auth.uid) return <Redirect to='/signin' /> // route guards to deny access in loged out\r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className='white'>\r\n          <h5 className='grey-text text-darken-3'>Sign Up</h5>\r\n          <div className='input-field'>\r\n            <label htmlFor='email'>Email</label>\r\n            <input type='email' id='email' onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className='input-field'>\r\n            <label htmlFor='password'>Password</label>\r\n            <input type='password' id='password' onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className='input-field'>\r\n            <label htmlFor='firstName'>First Name</label>\r\n            <input type='text' id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className='input-field'>\r\n            <label htmlFor='lastName'>Last Name</label>\r\n            <input type='text' id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className='input-field'>\r\n            <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\r\n          </div>\r\n          <div className='center red-text'>{authError ? <p>{authError}</p> : null}</div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../redux/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: '',\r\n    content: ''\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  //getting value to firestore\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n   this.props.createProject(this.state)\r\n   this.props.history.push('/');\r\n  }\r\n\r\n  render () {\r\n    const{auth}= this.props;\r\n    if (!auth.uid) return <Redirect to='/signin' /> // route guards to deny access in loged out\r\n    \r\n    return (\r\n      <div className='container'>\r\n        <form onSubmit={this.handleSubmit} className='white'>\r\n          <h5 className='grey-text text-darken-3'>Create New Project</h5>\r\n          <div className='input-field'>\r\n            <label htmlFor='title'>Title</label>\r\n            <input type='text' id='title' onChange={this.handleChange} />\r\n          </div>\r\n\r\n          <div className='input-field'>\r\n            <label htmlFor='password'>Project Content</label>\r\n           <textarea  id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n\r\n          <div className='input-field'>\r\n            <button className='btn pink lighten-1 z-depth-0'>Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst MapStateToProps =(state)=>{\r\n  return{\r\n    auth: state.firebase.auth,\r\n  }\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n  return{\r\n    createProject: (project) =>\r\n    dispatch(createProject(project))\r\n  }\r\n}\r\n\r\nexport default connect(MapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n   // 2,   3,4 - distructarization from withExtraArgument\r\n  return(dispatch, getState, {getFirebase, getFirestore}) =>{\r\n  //make async call to DATABASE\r\n  const firestore = getFirestore() \r\n  const profile =getState().firebase.profile; // getting profile from the state\r\n  const authorId = getState().firebase.auth.uid;\r\n  firestore.collection('projects').add({ // adding to database before dispatch\r\n    ...project,\r\n    authorFirstName: profile.firstName, \r\n    authorLastName: profile.lastName,\r\n    authorId: authorId,\r\n    createdAt: new Date()\r\n  }).then(()=>{ // promise logic\r\n    dispatch({ type:'CREATE_PROJECT', project: project })\r\n  }).catch((err)=>{\r\n    dispatch({ type: 'CREATE_PROJECT_ERROR', err:err}) // send to reducer if error\r\n  })\r\n  }\r\n}","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/projectlayout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/projects/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN_ERROR':\r\n      console.log('error');\r\n      return {\r\n        ...state,\r\n        authError: 'Login failed'\r\n      }\r\n\r\n    case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      }\r\n\r\n    case 'SIGNOUT_SUCCESS':\r\n      console.log('signout success');\r\n      return {\r\n        state\r\n      }\r\n\r\n    case 'SIGNUP_SUCCESS':\r\n      console.log('signup success');\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      }\r\n\r\n    case 'SIGNUP_ERROR':\r\n      console.log('signup error');\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer","const initState ={\r\n  projects:[\r\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n]\r\n};\r\n\r\nconst projectReducer =(state=initState, action)=>{\r\n  switch(action.type){\r\n    case 'CREATE_PROJECT':\r\n     console.log('created project', action.project);\r\n     return state; \r\n\r\n    case 'CREATE_PROJECT_ERROR':\r\n    console.log('created project error', action.err);\r\n    return state;\r\n    \r\n    default:\r\n    return state;\r\n  }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'; //syncing data from firestore\r\nimport {firebaseReducer} from 'react-redux-firebase'; // syncing firebase information including auth\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer, \r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app' // import library-base features\r\nimport 'firebase/firestore' // import database functionality\r\nimport 'firebase/auth' // import authentication\r\n// Initialize Firebase\r\nvar config = {\r\n  apiKey: \"AIzaSyAzSASxHWxj2nd3Fi9-xOoNydQzkAtrV9M\",\r\n  authDomain: \"supermariontaskmanager.firebaseapp.com\",\r\n  databaseURL: \"https://supermariontaskmanager.firebaseio.com\",\r\n  projectId: \"supermariontaskmanager\",\r\n  storageBucket: \"supermariontaskmanager.appspot.com\",\r\n  messagingSenderId: \"75996711963\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore().settings({ //\r\n  timestampsInSnapshots:true // getting timestamp\r\n})\r\n\r\nexport default firebase;","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from '../reducers/rootReducer'\r\nimport thunk from 'redux-thunk'\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore' // provides redux bindings for firestore in particular\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase' // provides an ability binding to firebase servise\r\nimport fbConfig from '../../config/fbConfig'\r\n\r\nconst DevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    // to combine multiply store enhansers\r\n    applyMiddleware(\r\n      thunk.withExtraArgument({\r\n        getFirestore,\r\n        getFirebase\r\n      })\r\n    ),\r\n    reduxFirestore(fbConfig), // both store enhansers to know which projects to connect to after action called\r\n    reactReduxFirebase(fbConfig, {\r\n      useFirestoreForProfile: true,\r\n      /* use firestore to get profile obj to state */\r\n      userProfile: 'users' /* which profile to use */,\r\n      attachAuthIsReady: true, /* confiq option */\r\n    }),\r\n    DevTools\r\n  )\r\n)\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\n\n\nstore.firebaseAuthIsReady.then(()=>{ // rendering only after firebase loged in or out\n  ReactDOM.render(\n    <Provider store = {store} >\n      <App / >\n    </Provider>,\n    document.getElementById('root'));\n})\n\n\nserviceWorker.unregister();"],"sourceRoot":""}
{"version":3,"sources":["components/projectlayout/SignInLinks.jsx","redux/actions/authActions.js","components/projectlayout/SignOutLinks.jsx","components/projectlayout/Navbar.jsx","components/dashboard/Notifications.jsx","components/projects/ProjectSummary.jsx","components/projects/ProjectList.jsx","config/fbConfig.js","components/dashboard/Dashboard.jsx","components/projects/ModalDelete.jsx","components/projects/ModalEdit.jsx","components/projects/ProjectDetails.jsx","redux/actions/projectActions.js","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/projects/CreateProject.jsx","App.jsx","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/projectReducer.js","redux/reducers/rootReducer.js","redux/store/store.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","projectlayout_SignInLinks","projectlayout_SignOutLinks","Link","Notification","notifications","map","item","key","id","title","content","user","moment","time","toDate","fromNow","ProjectSummary","_ref","project","index","react_beautiful_dnd_esm","draggableId","provided","snapshot","Object","assign","draggableProps","dragHandleProps","ref","innerRef","isDragging","authorFirstName","authorLastName","createdAt","calendar","ProjectList","column","tasks","droppableId","isDraggingOver","droppableProps","filter","el","projects_ProjectSummary","placeholder","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Dashboard","onDragEnd","result","destination","source","start","_this","columns","finish","newColumnOrder","Array","from","columnOrder","DOVn8mVxsU59mUOqX5pf","splice","createNewColumnsOrder","document","getElementById","setAttribute","startTaskIds","taskIds","newStart","objectSpread","updateTasksOrder","finishTaskIds","newFinish","newTaskIds","newColumn","firestore","collection","doc","update","_this$props","this","projects","direction","columnId","taskId","projects_ProjectList","Notifications","Redirect","Component","compose","data","ordered","firestoreConnect","orderBy","limit","ModalDelete","handleDeleteProject","lib","actions","data-id","ModalEdit","handleSubmit","handleEditChange","modalStatusEdit","onSubmit","onChange","value","ProjectDetails","e","setState","defineProperty","target","dataset","currentColumn","find","includes","console","log","updatedColumnIds","deleteProject","history","push","preventDefault","editProject","updateEditField","_this$state","href","modalToggleDelete","projects_ModalDelete","projects_ModalEdit","ownProps","match","params","getFirestore","delete","catch","err","editedProject","_ref3","SignIn","email","password","handleChange","signIn","authError","htmlFor","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","newUser","createUserWithEmailAndPassword","resp","set","CreateProject","newProject","Date","now","toString","FieldValue","arrayUnion","createProject","authorId","App","BrowserRouter","projectlayout_Navbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","DevTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86e719c2.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../redux/actions/authActions'\n\nconst SignInLinks = (props) => {\n  return (\n    <ul className='right'>\n      <li> <NavLink to='/create'>New Project</NavLink> </li>\n      <li> <NavLink to='/signin' onClick={props.signOut}>Log Out</NavLink></li>\n      <li> <NavLink to='/' className='btn btn-floating pink lighten-1'> {props.profile.initials} </NavLink> </li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    signOut:()=> dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps) (SignInLinks)\n","export const signIn = (credentials /*email and passord*/ ) => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase(); //firebase init\n\n    firebase.auth().signInWithEmailAndPassword( // initializing firebase auth\n      credentials.email,\n      credentials.password,\n    ).then(() => {\n      dispatch({\n        type: 'LOGIN_SUCCESS'\n      });\n    }).catch((err) => {\n      dispatch({\n        type: 'LOGIN_ERROR',\n        err\n      });\n    });\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {\n    getFirebase\n  }) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut() // method for signout\n      .then(() => {\n        dispatch({\n          type: 'SIGNOUT_SUCCESS'\n        })\n      });\n  }\n}\n\nexport const signUp = (newUser) => {\n\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword( // creating a new user \n      newUser.email, \n      newUser.password\n      ).then(resp => {\n        return firestore.collection('users') //creating a new collection\n        .doc(resp.user.uid) // creating a new doc with id and storing properties there\n        .set({ //setting properties\n          firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      });\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'SIGNUP_ERROR', err});\n    });\n  }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom'\n\nconst SignOutLinks = () => {\n  return (\n    <ul className='right'>\n     <li> <NavLink to='/signup'>Sign Up</NavLink> </li>\n     <li> <NavLink to='/signin'>Login</NavLink> </li>\n    </ul>\n  );\n};\n\nexport default SignOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignInLinks from './SignInLinks';\nimport SignOutLinks from './SignOutLinks';\nimport {connect} from 'react-redux';\n\nconst Navbar = (props) => {\n  const{auth, profile}=props;\n  \n  const links = auth.uid ? <SignInLinks profile={profile}/> : <SignOutLinks/>\n  return (\n    <nav className='nav-wrapper grey darken-3'>\n      <div className='container'>\n        <Link to='/' className='brand-logo left'> Mario Plan </Link>\n      {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state)=>{\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  }\n}\n\nexport default connect (mapStateToProps)(Navbar)\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notification = props => {\n  const { notifications } = props\n  return (\n    <div className=\"row\">\n\n    { notifications &&  <div className=\"col s12 m4 offset-m4 \">\n        <div className='card z-depth-0 notifi  '>\n          <div className='card-content  '>\n            <span className='card-title'>Notifications</span>\n            <ul className='notifications'>\n              {notifications && notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    {item.title ? (\n                      <div>\n                        <span className='black-text'>\n                          <span className='pink-text'>{item.title} </span>\n                          {item.content} by\n                          </span>\n                        <span className='pink-text'> {item.user}</span>\n                        <div className='grey-text note-date'>\n                          {moment(item.time.toDate()).fromNow()}\n                        </div>\n                      </div>\n                    ) : (\n\n                        <div>\n                          <span className='pink-text'>{item.user} </span>\n                          <span>{item.content}</span>\n                          <div className='note-date grey-text'>\n                            {moment(item.time.toDate()).fromNow()}\n                          </div>\n                        </div>\n                      )}\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    }\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\nimport { Draggable } from 'react-beautiful-dnd'\n\n\n\nconst ProjectSummary = ({ project, id, index }) => {\n\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provided, snapshot) => (\n        <div\n          id={id}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <div className={snapshot.isDragging ? 'card z-depth-0 teal lighten-5 project-summary task ' : 'card z-depth-0 project-summary task'}>\n            <div className='card-content grey-text text-darken-' >\n              <Link to={'/projects/' + id}>\n                <span className='pink-text card-title'>{project.title}</span>\n              </Link>\n              <p>\n                Posted by the {project.authorFirstName} {project.authorLastName}\n              </p>\n              <p className='grey-text'>{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n          </div>\n\n        </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default ProjectSummary\n\n\n","import React from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\nimport ProjectSummary from './ProjectSummary';\n\n\nconst ProjectList = ({ column, tasks, index }) => {\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {(provided) => (\n        \n        <div {...provided.draggableProps}  ref={provided.innerRef} id ={column.id} className='col s12 toDoContainer ' >\n          <div className='card z-depth-0 column-title' {...provided.dragHandleProps}>\n            <div className='card-content '>\n              <span className='card-title' >{column.title}</span>\n            </div>\n          </div>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <div className={snapshot.isDraggingOver ? 'pink lighten-1 z-depth-0 draggingContainer' : 'rgba(0,0,128, 0.3) draggingContainer'}\n                ref={provided.innerRef} {...provided.droppableProps}>\n                {tasks.filter(el => el != null).map((project, index) => <ProjectSummary project={project} key={project.id} id={project.id} index={index} />)}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n          </div>\n      )}\n    </Draggable>\n  )\n}\n\nexport default ProjectList;\n","import firebase from 'firebase/app' // import library-base features\nimport 'firebase/firestore' // import database functionality\nimport 'firebase/auth' // import authentication\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyAzSASxHWxj2nd3Fi9-xOoNydQzkAtrV9M\",\n  authDomain: \"supermariontaskmanager.firebaseapp.com\",\n  databaseURL: \"https://supermariontaskmanager.firebaseio.com\",\n  projectId: \"supermariontaskmanager\",\n  storageBucket: \"supermariontaskmanager.appspot.com\",\n  messagingSenderId: \"75996711963\"\n};\n\nfirebase.initializeApp(config);\n\n\nexport default firebase;","import React, { Component } from 'react'\nimport Notification from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\nimport firebase from '../../config/fbConfig'\n\n\nclass Dashboard extends Component {\n\n  onDragEnd = (result) => {\n\n    const { destination, source, draggableId, type } = result;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\n\n\n    const start = this.props.columns[source.droppableId];\n    const finish = this.props.columns[destination.droppableId];\n\n\n    //moving of columns\n    if (type === 'column') {\n      \n      const newColumnOrder = Array.from(this.props.columnOrder.DOVn8mVxsU59mUOqX5pf.columnOrder)\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      this.createNewColumnsOrder(newColumnOrder)\n      return\n    }\n\n    // moving inside the same column\n    if (start === finish) {\n     \n      const newTaskIds = Array.from(start.taskIds) // to avoid mutating of existing state\n      newTaskIds.splice(source.index, 1)\n      newTaskIds.splice(destination.index, 0, draggableId)\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds\n      }\n      this.updateTasksOrder(newColumn); //update column's order\n      return;\n    }\n    //moving from one list to another\n    document.getElementById(draggableId).setAttribute('class', 'component-hiden');\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = { ...start, taskIds: startTaskIds };\n    this.updateTasksOrder(newStart)\n\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId)\n    const newFinish = { ...finish, taskIds: finishTaskIds }\n    this.updateTasksOrder(newFinish)\n\n  }\n\n  updateTasksOrder = (column) => {\n    firebase.firestore().collection('columns').doc(column.id).update({\n      taskIds: column.taskIds,\n    }\n    )\n  }\n\n  createNewColumnsOrder = (column, ) => {\n    firebase.firestore().collection('columnOrder').doc('DOVn8mVxsU59mUOqX5pf').update({\n      columnOrder: column\n    })\n  }\n\n  render() {\n    const { projects, auth, notifications, columns, columnOrder } = this.props\n\n    if (!auth.uid) {\n      return <Redirect to='/signin' /> // route guards to deny access in loged out\n    } else {\n      return (\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Droppable droppableId='all columns' direction='horizontal' type='column'>\n            {provided => (\n              <div\n                className=\" \"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n\n                <div className='dashboard container column-main-area'>\n                  {columnOrder && columnOrder.DOVn8mVxsU59mUOqX5pf.columnOrder.map((columnId, index) => {\n                    const column = columns[columnId];\n                    const tasks = column.taskIds.map(taskId => projects[taskId])\n                    return <ProjectList key={column.id} column={column} tasks={tasks} index={index} />\n                  })\n                  }\n                </div>\n                {provided.placeholder}\n                <Notification notifications={notifications} />\n              </div>\n            )}\n          </Droppable>\n\n        </DragDropContext>\n      )\n    }\n\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.data.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n    columns: state.firestore.data.columns,\n    columnOrder: state.firestore.data.columnOrder,\n  }\n}\n\n\n\nexport default compose(\n  connect(mapStateToProps, null),\n  firestoreConnect([\n    // HOC for connecting to a single collection in firebase\n    { collection: 'projects', orderBy: ['createdAt', 'asc'] /* the order of mapping */ }, // when component is active use projects collection to put in appropriate cell in state\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }, // connecting to notification collection\n    { collection: 'columns' },\n    { collection: 'columnOrder' },\n  ])\n)(Dashboard)\n\n\n","import React from 'react'\nimport { Modal } from 'react-materialize'\n\nconst ModalDelete = ({ id, handleDeleteProject,  }) => {\n  return (\n    <Modal actions={false} id=\"modal2\">\n      <h5 className='center-align'>Are you sure you ?</h5>\n      <div>\n        <button className='pink lighten-1 waves-effect waves-light btn-small left ' data-id={id} onClick={handleDeleteProject}> Delete </button>\n       <button className='waves-effect waves-light btn-small right modal-close'> Cancel </button> \n      </div>\n    </Modal>\n  )\n}\n\nexport default ModalDelete\n","import React from 'react';\nimport { Modal } from 'react-materialize'\n\n\nconst ModalEdit = ({ handleSubmit, handleEditChange, id, title, content, modalStatusEdit }) => {\n\n  return (\n    <Modal actions={false} id=\"modal1\">\n\n      <form onSubmit={handleSubmit} className='white form-edit' data-id={id} >\n        <h5 className='center-align'>Please update your project</h5>\n        \n        <div className='input-field'>\n          <input onChange={handleEditChange} type='text' id='title' value={title} placeholder='update title' />\n        </div>\n        \n        <div className='input-field'>\n          <input onChange={handleEditChange} id='content' className='materialize-textarea' value={content} placeholder='update content' />\n        </div>\n        \n        <div className='input-field'>\n          <button className='waves-effect waves-light btn-small modal-close' >Update</button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default ModalEdit;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport { deleteProject, editProject } from '../../redux/actions/projectActions'\nimport ModalDelete from './ModalDelete'\nimport ModalEdit from './ModalEdit';\nimport firebase from '../../config/fbConfig'\n\nclass ProjectDetails extends Component {\n  state = {\n    title: '',\n    content: '',\n  }\n\n  handleEditChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleDeleteProject = e => {\n    const id = e.target.dataset.id\n\n    const currentColumn = this.props.columns && this.props.columns.find(el => el.taskIds.includes(id))\n    this.props.columns &&  console.log('currentColumn', this.props.columns );\n    const updatedColumnIds = currentColumn.taskIds.filter(el => el !== id);\n\n    firebase.firestore().collection('columns').doc(currentColumn.id).update({\n      taskIds: updatedColumnIds\n    }).then(() => this.props.deleteProject(id));\n\n    this.props.history.push('/')\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const id = e.target.dataset.id\n    this.props.editProject(id, this.state)\n  }\n\n  updateEditField = () => {\n    this.setState({\n      title: this.props.project.title,\n      content: this.props.project.content,\n    })\n\n  }\n\n  render() {\n    const { project, auth, id } = this.props\n    const { title, content} = this.state\n\n    if (!auth.uid) return <Redirect to='/signin' /> // route guards to deny access in loged out\n\n    if (project) {\n      return (\n        <div className='container section project-details '>\n          <div className='card z-depth-0'>\n            <div className='card-content'>\n              <div className=\"title-header\">\n                <span className='card-title'>{project.title}</span>\n                <div>\n                  <i onClick={this.updateEditField} className='material-icons left modal-trigger' href=\"#modal1\" >edit</i>\n                  <i className='material-icons left modal-trigger' href=\"#modal2\" onClick={this.modalToggleDelete}>delete_forever </i>\n                </div>\n              </div>\n\n              <div>{project.content}</div>\n            </div>\n            <div className='card-action grey lighten-4 grey-text'>\n              <div> {project.authorFirstName} {project.authorLastName} </div>\n              <div>{moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n          </div>\n          <ModalDelete id={id}\n            handleDeleteProject={this.handleDeleteProject} />\n          <ModalEdit id={id}\n            handleEditChange={this.handleEditChange}\n            handleSubmit={this.handleSubmit}\n            title={title}\n            content={content}\n             />\n        </div>\n      )\n    } else {\n      return (\n        <div className='container center'>\n          <p>Loading project</p>\n        </div>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id // PROPS OF THE COMPONENT (SECOND PARAMETER)\n  const projects = state.firestore.data.projects\n  const project = projects ? projects[id] : null\n  console.log(project)\n  return {\n    project: project,\n    auth: state.firebase.auth,\n    id: id,\n    columns: state.firestore.ordered.columns,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteProject: id => dispatch(deleteProject(id)),\n    editProject: (id, editedProject) => dispatch(editProject(id, editedProject))\n  }\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  firestoreConnect([\n  { collection: 'projects'},\n  { collection: 'columns' },\n])\n)(ProjectDetails)\n","export const createProject = (project) => {\n  // 2,   3,4 - distructarization from withExtraArgument\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make async call to DATABASE\n    const firestore = getFirestore()\n    const profile = getState().firebase.profile; // getting profile from the state\n    const authorId = getState().firebase.auth.uid;\n\n    firestore.collection('projects').doc(project.id).set({ // adding to database before dispatch\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => { // promise logic\n      dispatch({ type: 'CREATE_PROJECT', project: project })\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err: err }) // send to reducer if error\n    })\n  }\n}\n\nexport const deleteProject = (id) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n\n    firestore.collection('projects').doc(id).delete()\n      .then(() => {\n        dispatch({ type: 'DELETE_PROJECT', id: id })\n      }).catch((err) => {\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err: err })\n      })\n  }\n}\n\n\nexport const editProject = (id, editedProject) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    firestore.collection('projects').doc(id).update(editedProject)\n      .then(() => {\n        dispatch({ type: 'EDIT_PROJECT', id: id })\n      }).catch((err) => {\n        dispatch({ type: 'CREATE_PROJECT_ERROR', err: err })\n      })\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../redux/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.signIn(this.state)\n  }\n\n  render () {\n    const{authError, auth }=this.props;\n\n    if (auth.uid) return <Redirect to='/' /> // route guards to deny access in loged out\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0'>Login</button>\n            <div className=\"red-text center\">\n            {authError ? <p>{authError}</p>:null}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError, // FOR MESSAGE ERROR DISPLAY\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: credentials => dispatch(signIn(credentials))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../redux/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.signUp(this.state)\n  }\n\n  render () {\n    const { auth, authError } = this.props\n\n    if (auth.uid) return <Redirect to='/signin' /> // route guards to deny access in loged out\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign Up</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='firstName'>First Name</label>\n            <input type='text' id='firstName' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='lastName'>Last Name</label>\n            <input type='text' id='lastName' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\n          </div>\n          <div className='center red-text'>{authError ? <p>{authError}</p> : null}</div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createProject } from '../../redux/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\nimport firebase from '../../config/fbConfig'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: '',\n\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  //getting value to firestore\n  handleSubmit = e => {\n    e.preventDefault()\n\n    const newProject = {\n      ...this.state,\n      id: Date.now().toString(),\n    }\n\n    const fb = firebase.firestore();\n    fb.collection('columns').doc('column-1').update({\n      taskIds: firebase.firestore.FieldValue.arrayUnion(newProject.id)\n    });\n\n    this.props.createProject(newProject)\n    this.props.history.push('/');\n  }\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' /> // route guards to deny access in loged out\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Create New Project</h5>\n          <div className='input-field'>\n            <label htmlFor='title'>Title</label>\n            <input type='text' id='title' onChange={this.handleChange} />\n          </div>\n\n          <div className='input-field'>\n            <label htmlFor='password'>Project Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0'>Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst MapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) =>\n      dispatch(createProject(project))\n  }\n}\n\nexport default connect(MapStateToProps, mapDispatchToProps)(CreateProject)\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/projectlayout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject'\nimport './App.css';\n\nclass App extends Component {\n  render () {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/projects/:id' component={ProjectDetails}/>\n            <Route path='/signin' component={SignIn}/>\n            <Route path='/signup' component={SignUp}/>\n            <Route path='/create' component={CreateProject}/>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\n\nexport default App ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null,\n      }\n\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return {\n        state\n      }\n\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n \n    \n    default:\n      return state;\n  }\n}\n\nexport default authReducer","const initState ={\n  projects:[]\n};\n\nconst projectReducer =(state=initState, action)=>{\n  switch(action.type){\n    case 'CREATE_PROJECT':\n     console.log('created project', action.project);\n     return state; \n\n    case 'CREATE_PROJECT_ERROR':\n    console.log('created project error', action.err);\n    return state;\n\n    case 'DELETE_PROJECT':\n    console.log('deleted project', action.id);\n    return state;\n\n    case 'EDIT_PROJECT':\n    console.log('edited project', action.id);\n    return state;\n\n    default:\n    return state;\n  }\n}\n\nexport default projectReducer","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport {combineReducers} from 'redux';\nimport { firestoreReducer } from 'redux-firestore'; //syncing data from firestore\nimport {firebaseReducer} from 'react-redux-firebase'; // syncing firebase information including auth\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer, \n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n})\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from '../reducers/rootReducer'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore' // provides redux bindings for firestore in particular\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase' // provides an ability binding to firebase servise\nimport fbConfig from '../../config/fbConfig'\n\nconst DevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    // to combine multiply store enhansers\n    applyMiddleware(\n      thunk.withExtraArgument({\n        getFirestore,\n        getFirebase\n      })\n    ),\n    reduxFirestore(fbConfig), // both store enhansers to know which projects to connect to after action called\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      /* use firestore to get profile obj to state */\n      userProfile: 'users' /* which profile to use */,\n      attachAuthIsReady: true, /* confiq option */\n    }),\n    DevTools\n  )\n)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './redux/store/store';\n\n\nstore.firebaseAuthIsReady.then(()=>{ // rendering only after firebase loged in or out\n  ReactDOM.render(\n    <Provider store = {store} >\n      <App / >\n    </Provider>,\n    document.getElementById('root'));\n})\n\n\nserviceWorker.unregister();"],"sourceRoot":""}